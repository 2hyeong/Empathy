/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/users": {
    /** List all users */
    get: operations["getUsers"];
    /** Update a user */
    put: operations["updateUsers"];
    /** Create a user */
    post: operations["createUsers"];
  };
  "/users/{userId}": {
    /** Info for a specific user */
    get: operations["getUser"];
  };
  "/health": {
    get: operations["checkHealth"];
  };
}

export interface components {
  schemas: {
    /**
     * @example {
     *   "birthday": "birthday",
     *   "age_range": "age_range",
     *   "profile_image": "profile_image",
     *   "personality": "personality",
     *   "gender": "gender",
     *   "name": "name",
     *   "id": "id"
     * }
     */
    User: {
      id: string;
      name: string;
      birthday?: string;
      personality?: string;
      gender?: string;
      age_range?: string;
      profile_image?: string;
    };
    Error: {
      /** Format: int32 */
      code: number;
      message: string;
    };
    /**
     * @example {
     *   "ok": true
     * }
     */
    updateUsers_200_response: {
      ok: boolean;
    };
  };
  responses: {
    /** unexpected error */
    UnexpectedError: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** success */
    Success: {
      content: {
        "application/json": components["schemas"]["updateUsers_200_response"];
      };
    };
    /** Empty response */
    EmptyResponse: unknown;
  };
  parameters: {
    /** @description How many items to return at one time (max 100) */
    limit: number;
    /** @description The id of the user to retrieve */
    userId: string;
  };
}

export interface operations {
  /** List all users */
  getUsers: {
    parameters: {
      query: {
        /** How many items to return at one time (max 100) */
        limit?: number;
      };
    };
    responses: {
      /** A paged array of users */
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Update a user */
  updateUsers: {
    responses: {
      /** success */
      200: {
        content: {
          "application/json": components["schemas"]["updateUsers_200_response"];
        };
      };
      /** Empty response */
      201: unknown;
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create a user */
  createUsers: {
    responses: {
      /** success */
      200: {
        content: {
          "application/json": components["schemas"]["updateUsers_200_response"];
        };
      };
      /** Empty response */
      201: unknown;
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Info for a specific user */
  getUser: {
    parameters: {
      path: {
        /** The id of the user to retrieve */
        userId: string;
      };
    };
    responses: {
      /** Expected response to a valid request */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  checkHealth: {
    responses: {
      /** OK */
      200: unknown;
      /** NOT FOUND */
      404: unknown;
    };
  };
}

export interface external {}
