/* tslint:disable */
/* eslint-disable */
/**
 * Empathy
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Friend,
  UpdateUsers200Response,
} from '../models';
import {
    FriendFromJSON,
    FriendToJSON,
    UpdateUsers200ResponseFromJSON,
    UpdateUsers200ResponseToJSON,
} from '../models';

export interface GetFriendsRequest {
    limit?: number;
}

/**
 * 
 */
export class FriendsApi extends runtime.BaseAPI {

    /**
     * Create a friend
     * Create
     */
    async createFriendRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateUsers200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/users/friends`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UpdateUsers200ResponseFromJSON(jsonValue));
    }

    /**
     * Create a friend
     * Create
     */
    async createFriend(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateUsers200Response> {
        const response = await this.createFriendRaw(initOverrides);
        return await response.value();
    }

    /**
     * Delete a friend
     * Delete
     */
    async deleteFriendRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateUsers200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/users/friends`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UpdateUsers200ResponseFromJSON(jsonValue));
    }

    /**
     * Delete a friend
     * Delete
     */
    async deleteFriend(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateUsers200Response> {
        const response = await this.deleteFriendRaw(initOverrides);
        return await response.value();
    }

    /**
     * List all friends in users
     * List
     */
    async getFriendsRaw(requestParameters: GetFriendsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Friend>>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/users/friends`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(FriendFromJSON));
    }

    /**
     * List all friends in users
     * List
     */
    async getFriends(requestParameters: GetFriendsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Friend>> {
        const response = await this.getFriendsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
