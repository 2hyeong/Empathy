/* tslint:disable */
/* eslint-disable */
/**
 * Empathy
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Friend } from './Friend';
import {
    FriendFromJSON,
    FriendFromJSONTyped,
    FriendToJSON,
} from './Friend';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    birthday?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    personality?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    gender?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    ageRange?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    image?: string;
    /**
     * 
     * @type {Array<Friend>}
     * @memberof User
     */
    friends?: Array<Friend>;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'birthday': !exists(json, 'birthday') ? undefined : json['birthday'],
        'personality': !exists(json, 'personality') ? undefined : json['personality'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'ageRange': !exists(json, 'age_range') ? undefined : json['age_range'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'friends': !exists(json, 'friends') ? undefined : ((json['friends'] as Array<any>).map(FriendFromJSON)),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'birthday': value.birthday,
        'personality': value.personality,
        'gender': value.gender,
        'age_range': value.ageRange,
        'image': value.image,
        'friends': value.friends === undefined ? undefined : ((value.friends as Array<any>).map(FriendToJSON)),
    };
}

